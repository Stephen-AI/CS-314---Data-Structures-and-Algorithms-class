#BlueJ class context
comment0.params=first\ rest
comment0.target=Cons(java.lang.Object,\ Cons)
comment1.params=first\ rest
comment1.target=Cons\ cons(java.lang.Object,\ Cons)
comment10.params=x
comment10.target=java.lang.Object\ op(Cons)
comment11.params=x
comment11.target=java.lang.Object\ lhs(Cons)
comment12.params=x
comment12.target=java.lang.Object\ rhs(Cons)
comment13.params=x
comment13.target=boolean\ numberp(java.lang.Object)
comment14.params=x
comment14.target=boolean\ integerp(java.lang.Object)
comment15.params=x
comment15.target=boolean\ floatp(java.lang.Object)
comment16.params=x
comment16.target=boolean\ stringp(java.lang.Object)
comment17.params=
comment17.target=java.lang.String\ toString()
comment18.params=lst
comment18.target=java.lang.String\ toString(Cons)
comment19.params=lst
comment19.target=java.lang.String\ toStringb(Cons)
comment2.params=x
comment2.target=boolean\ consp(java.lang.Object)
comment20.params=other
comment20.target=boolean\ equals(java.lang.Object)
comment21.params=tree\ other
comment21.target=boolean\ equal(java.lang.Object,\ java.lang.Object)
comment22.params=tree\ other
comment22.target=boolean\ eql(java.lang.Object,\ java.lang.Object)
comment23.params=item\ lst
comment23.target=Cons\ member(java.lang.Object,\ Cons)
comment24.params=x\ y
comment24.target=Cons\ union(Cons,\ Cons)
comment25.params=x\ y
comment25.target=boolean\ subsetp(Cons,\ Cons)
comment26.params=x\ y
comment26.target=boolean\ setEqual(Cons,\ Cons)
comment27.params=x\ y
comment27.target=Cons\ append(Cons,\ Cons)
comment28.params=key\ lst
comment28.target=Cons\ assoc(java.lang.Object,\ Cons)
comment29.params=x
comment29.target=int\ square(int)
comment3.params=lst
comment3.target=java.lang.Object\ first(Cons)
comment30.params=x\ n
comment30.target=int\ pow(int,\ int)
comment31.params=str\ answer
comment31.target=void\ printanswer(java.lang.String,\ java.lang.Object)
comment32.params=item\ cave
comment32.target=Cons\ findpath(java.lang.Object,\ java.lang.Object)
comment33.params=item\ cave
comment33.target=boolean\ check(java.lang.Object,\ java.lang.Object)
comment33.text=\r\npublic\ static\ Cons\ findpath(Object\ item,\ Object\ cave)\ {\r\n\ \ \ \ if(cave\ \=\=\ null)\r\n\ \ \ \ return\ null;\r\n\ \ \ \ else\ if(consp(first((Cons)cave)))\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ if(check(item,\ first((Cons)cave)))\r\n\ \ \ \ \ \ \ \ return\ cons("first",\ findpath(item,first((Cons)cave)));\ \r\n\ \ \ \ \ \ \ \ else\r\n\ \ \ \ \ \ \ \ return\ cons("rest",\ findpath(item,rest((Cons)cave)));\r\n\ \ \ \ }\r\n\ \ \ \ else\ if(item.equals(first((Cons)cave)))\r\n\ \ \ \ return\ append(list("first"),\ list("done"));\r\n\ \ \ \ else\r\n\ \ \ \ return\ cons("rest",\ findpath(item,\ rest((Cons)cave)));\ \r\n}
comment34.params=path\ cave
comment34.target=java.lang.Object\ follow(Cons,\ java.lang.Object)
comment35.params=item\ tree1\ tree2
comment35.target=java.lang.Object\ corresp(java.lang.Object,\ java.lang.Object,\ java.lang.Object)
comment36.params=e\ v
comment36.target=Cons\ solve(Cons,\ java.lang.String)
comment37.params=e\ v\ prevar
comment37.target=Cons\ solveb(Cons,\ java.lang.String,\ java.lang.Object)
comment38.params=tree\ bindings
comment38.target=java.lang.Double\ eval(java.lang.Object,\ Cons)
comment39.params=equations\ var\ values
comment39.target=java.lang.Double\ solveit(Cons,\ java.lang.String,\ Cons)
comment4.params=lst
comment4.target=Cons\ rest(Cons)
comment40.params=expr
comment40.target=Cons\ vars(java.lang.Object)
comment41.params=args
comment41.target=void\ main(java.lang.String[])
comment5.params=x
comment5.target=java.lang.Object\ second(Cons)
comment6.params=x
comment6.target=java.lang.Object\ third(Cons)
comment7.params=x\ i
comment7.target=void\ setfirst(Cons,\ java.lang.Object)
comment8.params=x\ y
comment8.target=void\ setrest(Cons,\ Cons)
comment9.params=elements
comment9.target=Cons\ list(java.lang.Object[])
numComments=42
