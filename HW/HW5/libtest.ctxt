#BlueJ class context
comment0.params=x
comment0.target=java.lang.Object\ fn(java.lang.Object)
comment1.params=lst
comment1.target=java.lang.Integer\ sumlist(java.util.LinkedList)
comment10.params=lst
comment10.target=java.util.LinkedList\ reverse(java.util.LinkedList)
comment11.params=args
comment11.target=void\ main(java.lang.String[])
comment12.params=x
comment12.target=boolean\ pred(java.lang.Object)
comment13.params=x
comment13.target=java.lang.Integer\ fn(java.lang.Object)
comment2.params=lst
comment2.target=java.lang.Integer\ sumarrlist(java.util.ArrayList)
comment3.params=p\ lst
comment3.target=java.util.LinkedList\ subset(Predicate,\ java.util.LinkedList)
comment4.params=p\ lst
comment4.target=java.util.LinkedList\ dsubset(Predicate,\ java.util.LinkedList)
comment5.params=p\ lst
comment5.target=java.lang.Object\ some(Predicate,\ java.util.LinkedList)
comment6.params=f\ lst
comment6.target=java.util.LinkedList\ mapcar(Functor,\ java.util.LinkedList)
comment7.params=lsta\ lstb
comment7.target=java.util.LinkedList\ merge(java.util.LinkedList,\ java.util.LinkedList)
comment8.params=lst
comment8.target=java.util.LinkedList\ sort(java.util.LinkedList)
comment8.text=\r\n\ This\ sort\ and\ the\ destructive\ merge\ sort\ both\ have\ a\ Big\ O\ of\ O(nlogn).\ But\ the\ the\ garbage\ collector\ has\ to\ remove\ unreferenced\ data\ from\ \r\n\ this\ sort\ functions\ this\ runs\ about\ nlogn\ -\ 1\ times\ for\ a\ Big\ O\ of\ O(nlogn)whereas\ the\ destructive\ merge\ has\ no\ garbage.\r\n
comment9.params=lsta\ lstb
comment9.target=java.util.LinkedList\ intersection(java.util.LinkedList,\ java.util.LinkedList)
numComments=14
