#BlueJ class context
comment0.params=first\ rest
comment0.target=Cons(java.lang.Object,\ Cons)
comment1.params=first\ rest
comment1.target=Cons\ cons(java.lang.Object,\ Cons)
comment10.params=
comment10.target=java.lang.String\ toString()
comment11.params=lst
comment11.target=java.lang.String\ toString(Cons)
comment12.params=lst
comment12.target=java.lang.String\ toStringb(Cons)
comment13.params=x
comment13.target=int\ square(int)
comment14.params=n
comment14.target=int\ sumsq(int)
comment15.params=x\ y
comment15.target=int\ peanoplus(int,\ int)
comment15.text=\r\n\ The\ invariant\ is\ that\ peanoplus\ runs\ y\ times\r\n\ Since\ the\ peanoplus\ function\ runs\ until\ until\ y\ gets\ to\ 0,\ \r\n\ then\ the\ Big\ O\ is\ O(y)\r\n
comment16.params=x\ y
comment16.target=int\ peanotimes(int,\ int)
comment16.text=\r\n\ Since\ peanotimes\ runs\ y\ times\ and\ peanoplus\ runs\ x\ times,\ the\ Big\ O\ is\ O(xy)\r\n
comment17.params=n\ k
comment17.target=int\ choose(int,\ int)
comment18.params=n\ k\ x\ y
comment18.target=int\ aux(int,\ int,\ double,\ double)
comment18.text=\r\n\ Description\:\ This\ auxillary\ function\ recursively\ finds\ the\ factorial\ of\ 2\ sets\ of\ numbers\ and\ returns\ the\ quotient\r\n\ @param\ n\ The\ number\ of\ things\ to\ choose\ from\r\n\ @param\ k\ The\ number\ of\ things\ allowed\ to\ choose\r\n\ @param\ x\ The\ numerator\ of\ the\ modified\ n\ choose\ k\ formula\r\n\ @param\ y\ The\ denominator\ of\ the\ modified\ n\ choose\ k\ formula\ (Which\ is\ k\!)\r\n\ @return\ aux(n,k)\ Recursively\ multiplies\ n\ by\ x\ and\ k\ *\ y,\ k\ times,\ until\ it\ final\ returns\ the\ quotient\ of\ the\ numerator\ and\ the\ denominator\ \r\n
comment19.params=lst
comment19.target=int\ sumlist(Cons)
comment2.params=x
comment2.target=boolean\ consp(java.lang.Object)
comment20.params=arg
comment20.target=int\ sumlistb(Cons)
comment21.params=lst
comment21.target=int\ sumlistr(Cons)
comment21.text=\r\n\ Description\:\ This\ function\ sums\ all\ integers\ in\ a\ list\ recursively\r\n\ @param\ lst\ The\ list\ with\ the\ numbers\ to\ be\ summed\r\n\ @return\ first(lst)\ +\ rest(lst)\ Uses\ recursion\ to\ traverse\ the\ list\ and\ add\ the\ next\ numbers\ in\ the\ list\ to\ the\ first\r\n
comment22.params=lst
comment22.target=int\ sumlisttr(Cons)
comment23.params=sum\ lst
comment23.target=int\ sumAux(int,\ Cons)
comment23.text=\r\n\ Description\:\ This\ functions\ sums\ the\ integers\ in\ a\ list\r\n\ @param\ sum\ This\ is\ an\ accumulator\ that\ eventually\ evaluates\ to\ the\ sum\ of\ all\ the\ integers\ in\ the\ list\r\n\ @param\ lst\ This\ is\ the\ list\ of\ integers\r\n
comment24.params=lst\ lstb
comment24.target=int\ sumsqdiff(Cons,\ Cons)
comment24.text=\r\n\ Description\:\ This\ function\ finds\ the\ sum\ of\ the\ square\ of\ the\ difference\ between\ 2\ sets\ of\ numbers\ in\ lists\r\n\ @param\ lst\ the\ first\ list\ of\ numbers\r\n\ @param\ lsttb\ the\ second\ list\ of\ numbers\r\n\ @return\ int\ sum\ -\ The\ accumulated\ sum\ of\ the\ square\ of\ the\ difference\ between\ a\ number\ in\ a\ list\ and\ it's\ corresponding\ pair\ in\ another\ list\r\n
comment25.params=lst\ lstb
comment25.target=int\ sumsqdiffr(Cons,\ Cons)
comment26.params=lst\ lstb
comment26.target=int\ sumsqdifftr(Cons,\ Cons)
comment27.params=lst\ lstb\ sum
comment27.target=int\ sqAux(Cons,\ Cons,\ int)
comment28.params=lst
comment28.target=int\ maxlist(Cons)
comment28.text=\r\n\ Description\:\ This\ function\ returns\ the\ highest\ number\ in\ alist\ of\ numbers\r\n\ @param\ lst\ The\ list\ of\ numbers\ to\ evaluate\r\n\ @return\ highest\ The\ highest\ number\ in\ the\ list\r\n
comment29.params=lst
comment29.target=int\ maxlistr(Cons)
comment3.params=lst
comment3.target=java.lang.Object\ first(Cons)
comment30.params=lst
comment30.target=int\ maxlisttr(Cons)
comment31.params=lst\ high
comment31.target=int\ maxAux(Cons,\ int)
comment32.params=n
comment32.target=Cons\ binomial(int)
comment32.text=\r\n\ 4\ choose\ 0\ \=\ 1\r\n\ 4\ choose\ 1\ \=\ 4\r\n\ 4\ choose\ 2\ \=\ 6\r\n\ 4\ choose\ 3\ \=\ 4\r\n\ 4\ choose\ 4\ \=\ 1\r\n\ \r\n\ The\ binomial\ coefficients\ are\ equal\ to\ the\ the\ n\ choose\ k\ values\r\n\ \r\n
comment33.params=level\ lst
comment33.target=Cons\ binomialb(int,\ Cons)
comment34.params=lst\ lstb
comment34.target=Cons\ binomialc(Cons,\ Cons)
comment35.params=args
comment35.target=void\ main(java.lang.String[])
comment4.params=lst
comment4.target=Cons\ rest(Cons)
comment5.params=x
comment5.target=java.lang.Object\ second(Cons)
comment6.params=x
comment6.target=java.lang.Object\ third(Cons)
comment7.params=x\ i
comment7.target=void\ setfirst(Cons,\ java.lang.Object)
comment8.params=x\ y
comment8.target=void\ setrest(Cons,\ Cons)
comment9.params=elements
comment9.target=Cons\ list(java.lang.Object[])
numComments=36
